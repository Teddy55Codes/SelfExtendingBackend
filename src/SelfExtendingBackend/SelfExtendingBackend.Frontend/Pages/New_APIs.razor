@page "/New_APIs"
@using System.Collections.Generic
@using System.Diagnostics
@using SelfExtendingBackend.Frontend.Models

<h3>New APIs</h3>

<RadzenDataGrid Data="@apiList" TItem="ApiInfo" AllowPaging="true" AllowSorting="true">
    <Columns>
        <RadzenDataGridColumn TItem="ApiInfo" Property="Name" Title="API Name" />
        <RadzenDataGridColumn TItem="ApiInfo" Property="Route" Title="Route" />
        <RadzenDataGridColumn TItem="ApiInfo" Property="Description" Title="Description" />
        <RadzenDataGridColumn TItem="ApiInfo" Title="Open in Postman">
            <Template Context="api">
                <RadzenButton Text="Open Postman" Click="@(() => OpenInPostman(api))" />
            </Template>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>

@code {
private List<ApiInfo> apiList = new List<ApiInfo>
{
new ApiInfo { Name = "Get Users", Route = "/api/users", Description = "Retrieves a list of users.", HttpMethod = "GET" },
new ApiInfo { Name = "Create User", Route = "/api/users", Description = "Creates a new user.", HttpMethod = "POST" },
};

private void OpenInPostman(ApiInfo api)
{
// Construct the URL for the Postman web app
var postmanWebUrl = $"https://web.postman.co/workspace/MyWorkspace/request/new?method={api.HttpMethod}&url={Uri.EscapeDataString("http://localhost:5000" + api.Route)}";

try
{
// Open the web browser with the constructed URL
Process.Start(new ProcessStartInfo(postmanWebUrl) { UseShellExecute = true });
}
catch (Exception ex)
{
Console.WriteLine($"Failed to open Postman: {ex.Message}");
}
}
}